{"version":3,"sources":["components/Navbar/index.js","components/Row/index.js","components/Table/index.js","components/Search/index.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","Row","props","src","employee","picture","thumbnail","alt","name","first","last","cell","email","dob","age","Table","onClick","sortName","employees","map","index","Search","onChange","handleInputChange","value","searchValue","type","placeholder","axios","get","App","state","employeesOrdered","filterUsers","event","setState","target","filterEmployees","filter","console","log","toLowerCase","indexOf","sortNameAscending","sortNameDescending","sort","a","b","API","then","res","data","results","catch","err","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b67b9f7.chunk.js","sourcesContent":["import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n  return (\n    <header className=\"navbarHeader\">\n      {/* <nav class=\"navbar navbar-dark bg-primary\"></nav> */}\n      Employee Directory\n    </header>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nfunction Row(props) {\n  return (\n    <tr>\n      <td>\n        <img src={props.employee.picture.thumbnail} alt=\"profile\" />\n      </td>\n      <td>\n        {props.employee.name.first} {\" \"} {props.employee.name.last}\n      </td>\n      <td>{props.employee.cell}</td>\n      <td>{props.employee.email}</td>\n      <td>{props.employee.dob.age}</td>\n    </tr>\n  );\n}\n\nexport default Row;\n","import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Row from \"../Row/\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Table(props) {\n  return (\n    <table className=\"table table-hover table-dark\">\n      <thead>\n        <tr>\n          <th>Photo</th>\n          <th>\n            Name\n            <span onClick={props.sortName}>\n              <i className=\"fa fa fa-sort\"></i>\n            </span>\n          </th>\n          <th>Phone</th>\n          <th>Email</th>\n          <th>Age</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.employees.map((employee, index) => (\n          <Row key={index} employee={employee} />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n//export Navbar\n// map props.employees to the Tablerow\n// <Row key={} employee = {}>\n\n// import React from \"react\";\n// import \"./style.css\";\n\n// function SearchResults(props) {\n//   return (\n//     <ul className=\"list-group search-results\">\n//       {props.results.map(result => (\n//         <li key={result} className=\"list-group-item\">\n//           <img alt=\"Dog\" src={result} className=\"img-fluid\" />\n//         </li>\n//       ))}\n//     </ul>\n//   );\n// }\n\n// export default SearchResults;\n","import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Search(props) {\n  return (\n    <div>\n      <form>\n        <input\n          onChange={props.handleInputChange}\n          value={props.searchValue}\n          type=\"text\"\n          placeholder=\"Enter names to filter\"\n        />\n      </form>\n    </div>\n  );\n}\n\nexport default Search;\n","import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the Random User API\n\nexport default {\n  getRandomUser: function () {\n    return axios.get(\"https://randomuser.me/api/?results=150&nat=au\");\n  },\n};\n\n// const API = {\n//   getRandomUser: function () {\n//     return axios.get(\"https://randomuser.me/api/\");\n//   },\n// };\n\n// export default API;\n//   nationality\n//   https://randomuser.me/api/?nat=au\n\n//   Random User Generator allows you to fetch up to 5,000 generated\n//   users in one request using the results parameter.\n\n// https://randomuser.me/api/?results=5000\n\n// Specify by gender\n\n// https://randomuser.me/api/?gender=female\n\n// If you only wanted the names,genders,and nats of users:\n// https://randomuser.me/api/?inc=gender,name,nat\n\n// If you want everything except for login data:\n// https://randomuser.me/api/?exc=login\n\n//   Sometimes, maybe you want some random names and not extraneous data such as location, phone, etc.\n// Using the inc and exc parameters, you can specify which fields to include or exclude respectively.\n\n// By specifying only the fields you want, the generator can save time by skipping CPU intensive fields like \"login\" for example.\n\n// These parameters accept the following values in a comma delimited list\n\n// gender\n// name\n// location\n// email\n// login\n// registered\n// dob\n// phone\n// cell\n// id\n// picture\n// nat\n\n// Given a table of random users generated from the [Random User API](https://randomuser.me/), when the user loads the page, a table of employees should render.\n","// import logo from \"./logo.svg\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n// import React from \"react\";\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\n// import utils from \"./utils/API.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"./components/Navbar\";\nimport Table from \"./components/Table\";\nimport Search from \"./components/Search\";\n// import \"./style.css\";\nimport API from \"./utils/API\";\n// Using the datalist element we can create autofill suggestions based on the props.employees array\nclass App extends Component {\n  state = {\n    employees: [],\n    employeesOrdered: [],\n    filterUsers: [],\n    searchValue: \"\",\n    sortName: true,\n  };\n  // When the component mounts, get a list of all available base employees and update this.state.employees\n  componentDidMount() {\n    API.getRandomUser()\n      .then((res) =>\n        this.setState({\n          employees: res.data.results,\n          filterUsers: res.data.results,\n        })\n      )\n\n      .catch((err) => console.log(err));\n  }\n\n  handleInputChange = (event) => {\n    this.setState({ searchValue: event.target.value }, () =>\n      this.filterEmployees()\n    );\n  };\n  // filterEmployees() {}\n\n  filterEmployees = () => {\n    let filterUsers = this.state.searchValue;\n    filterUsers = this.state.employees.filter((employees) => {\n      console.log(employees);\n      let employeesName =\n        employees.name.first.toLowerCase() + employees.name.last.toLowerCase();\n      return employeesName.indexOf(this.state.searchValue.toLowerCase()) !== -1;\n    });\n    this.setState({\n      filterUsers: filterUsers,\n    });\n  };\n\n  sortName = () => {\n    if (this.state.sortName) {\n      this.setState({\n       // employees: this.sortNameAscending(this.state.employees),\n        filterUsers: this.sortNameAscending(this.state.filterUsers),\n        sortName: false\n      });\n    } else {\n      this.setState({\n        //employees: this.sortNameDescending(this.state.employees),\n        filterUsers: this.sortNameDescending(this.state.filterUsers),\n        sortName: true\n      });\n    }\n  };\n  sortNameAscending = (employees) => {\n    employees.sort(function (a, b) {\n      if (a.name.first < b.name.first) {\n        return -1;\n      }\n      if (a.name.first > b.name.first) {\n        return 1;\n      }\n      return 0;\n    });\n    return employees;\n  };\n  sortNameDescending = (employees) => {\n    employees.sort(function (a, b) {\n      if (a.name.first > b.name.first) {\n        return -1;\n      }\n      if (a.name.first < b.name.first) {\n        return 1;\n      }\n      return 0;\n    });\n    return employees;\n  };\n\n  // handleFormSubmit = event => {\n  //   event.preventDefault();\n  //   API.getDogsOfemployee(this.state.search)\n  //     .then(res => {\n  //       if (res.data.status === \"error\") {\n  //         throw new Error(res.data.message);\n  //       }\n  //       this.setState({ results: res.data.message, error: \"\" });\n  //     })\n  //     .catch(err => this.setState({ error: err.message }));\n  // };\n\n  render() {\n    return (\n      // <Router>\n      <div>\n        <Navbar />\n        <Search\n          searchValue={this.state.searchValue}\n          handleInputChange={this.handleInputChange}\n        />\n        <Table employees={this.state.filterUsers} sortName={this.sortName} />\n        {/* <Footer /> */}\n      </div>\n      // </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}